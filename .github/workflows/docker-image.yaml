name: Build and Push Node.js Image to AWS ECR

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build and push to ECR
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Log in to AWS ECR
      id: ecr-login
      uses: aws-actions/amazon-ecr-login@v1

    - name: Get version from VERSION file
      id: get-version
      run: |
        if [ -f VERSION ]; then
          VERSION=$(cat VERSION)
        else
          echo "VERSION file not found. Exiting..."
          exit 1
        fi
        echo "Current version: $VERSION"
        echo ::set-output name=version::$VERSION

    - name: Build Docker image
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.get-version.outputs.version }} .
      env:
        ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
        ECR_REPOSITORY: hitc-docker-cicd-ecr

    - name: Tag Docker image with semantic version
      run: |
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.get-version.outputs.version }} $ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.get-version.outputs.version }}
      env:
        ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
        ECR_REPOSITORY: hitc-docker-cicd-ecr

    - name: Push Docker image to ECR
      run: |
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.get-version.outputs.version }}
      env:
        ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
        ECR_REPOSITORY: hitc-docker-cicd-ecr